{
  "title": "contact",
  "section": [
    {
      "css": "text-left",
      "body": "# h1 Heading 8-)\n<h2> h2 Heading by HTML</h2>\n## h2 Heading\n### h3 Heading\n      \n<Accordion name=\"Accordion Name 1\">\nLorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrudxercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n</Accordion>\n\n## Horizontal Rules\n\n___\n\n---\n\n***\n\n## Typographic replacements\n\nEnable typographer option to see result.\n\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\n\ntest.. test... test..... test?..... test!....\n\n!!!!!! ???? ,,  -- ---\n\n\"Smartypants, double quotes\" and 'single quotes'\n\n\n## Emphasis\n\n**This is bold text**\n\n__This is bold text__\n\n*This is italic text*\n\n_This is italic text_\n\n~~Strikethrough~~\n\n\n## Blockquotes\n\n\n> Blockquotes can also be nested...\n>> ...by using additional greater-than signs right next to each other...\n> > > ...or with spaces between arrows.\n\n\n## Lists\n\nUnordered\n\n+ Create a list by starting a line with `+`, `-`, or `*`\n+ Sub-lists are made by indenting 2 spaces:\n  - Marker character change forces new list start:\n    * Ac tristique libero volutpat at\n    + Facilisis in pretium nisl aliquet\n    - Nulla volutpat aliquam velit\n+ Very easy!\n\nOrdered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n\n\n1. You can use sequential numbers...\n1. ...or keep all the numbers as `1.`\n\nStart numbering with offset:\n\n57. foo\n1. bar\n\n\n## Code\n\nInline `code`\n\nIndented code\n\n    // Some comments\n    line 1 of code\n    line 2 of code\n    line 3 of code\n\n\nBlock code \"fences\"\n\n```\nSample text here...\n```\nSyntax highlighting\n\n``` javascript\nvar foo = function (bar) {\n  return bar++;\n};\n\nconsole.log(foo(5));\n```\n\n``` go\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Hello, world!\")\n}\n```\n\n## Tables\n\n| Option | Description |\n| ------ | ----------- |\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\nRight aligned columns\n\n| Option | Description |\n| ------:| -----------:|\n| data   | path to data files to supply the data that will be passed into templates. |\n| engine | engine to be used for processing templates. Handlebars is the default. |\n| ext    | extension to be used for dest files. |\n\n## Links\n\n[vue-markdown](https://github.com/miaolz123/vue-markdown)\n\n[link with title](https://github.com/miaolz123/vue-markdown \"VueMarkdown\")\n\nAutoconverted link https://github.com/miaolz123/vue-markdown (enable linkify to see)\n\n\n## Images\n\n![Minion](dist/img/minion.png)\n\nLike links, Images also have a footnote style syntax\n\n![Alt text][id]\n\nWith a reference later in the document defining the URL location:\n\n[id]: dist/img/minion.png  \"The Dojocat\"\n\n\n### Emojies\n\n> Classic markup: :wink: :cry: :laughing: :yum:\n>\n> Shortcuts (emoticons): :-) :-( 8-) ;)\n\n\n### Subscript / Superscript\n\n- 19^th^\n- H~2~O\n\n\n### \\<ins>\n\n++Inserted text++\n\n\n### \\<mark>\n\n==Marked text==\n\n\n### Footnotes\n\nFootnote 1 link[^first].\n\nFootnote 2 link[^second].\n\nInline footnote^[Text of inline footnote] definition.\n\nDuplicated footnote reference[^second].\n\n[^first]: Footnote **can have markup**\n\n    and multiple paragraphs.\n\n[^second]: Footnote text.\n\n\n### Definition lists\n\nTerm 1\n\n:   Definition 1\nwith lazy continuation.\n\nTerm 2 with *inline markup*\n\n:   Definition 2\n\n        { some code, part of Definition 2 }\n\n    Third paragraph of definition 2.\n\n_Compact style:_\n\nTerm 1\n  ~ Definition 1\n\nTerm 2\n  ~ Definition 2a\n  ~ Definition 2b\n\n\n### Abbreviations\n\nThis is HTML abbreviation example.\n\nIt converts \"HTML\", but keep intact partial entries like \"xxxHTMLyyy\" and so on.\n\n*[HTML]: Hyper Text Markup Language"
    },
    {
      "css": "text-left",
      "body": "<iframe src=\"https://www.youtube.com/embed/lBdnti4_UUg\" width=\"100%\" height=\"500px\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n\n# markdown-it-vue\n\n## Image size and Viewer\n\n![gvf](http://www.aqcoder.com/gvf-project.png =x50)\n![ravenq](http://www.aqcoder.com/ravenq-qr.png =50x50)\n\n## GitHub Table of Contents\n\n[toc]\n\nNote: Only `h2` and `h3` are shown in toc.\n\n## alter\n\nMarkup is similar to fenced code blocks. Valid container types are `success`, `info`, `warning` and `error`.\n\n::: success\nYou have got it.\n:::\n\n::: info\nYou have new mail.\n:::\n\n::: warning\nYou have new mail.\n:::\n\n::: error\nStaying up all night is bad for health.\n:::\n\n## mermaid charts\n\n### mermaid Flowchart\n\n[Flowchart Syntax](http://knsv.github.io/mermaid/#flowcharts-basic-syntax)\n\n```mermaid\ngraph TD;\n    A-->B;\n    A-->C;\n    B-->D;\n    C-->D;\n```\n\n```\nsequenceDiagram\n    participant Alice\n    participant Bob\n    Alice->John: Hello John, how are you?\n    loop Healthcheck\n        John->John: Fight against hypochondria\n    end\n    Note right of John: Rational thoughts <br/>prevail...\n    John-->Alice: Great!\n    John->Bob: How about you?\n    Bob-->John: Jolly good!\n```\n\n## Definition list\n\nTerm 1\n  ~ Definition 1\n\nTerm 2\n  ~ Definition 2a\n  ~ Definition 2b\n\n[Definition List Syntax](http://pandoc.org/README.html#definition-lists)\n\n\n## AsciiMath\n\nInline AsciiMath: `@(1/2[1-(1/2)^n])/(1-(1/2))=s_n@`\n\n```AsciiMath\noint_Cx^3 dx+4y^2 dy\n\n2=(((3-x)xx2)/(3-x))\n\nsum_(m=1)^oosum_(n=1)^oo(m^2 n)/(3^m(m3^n+n3^m)\n```\n\n```ASCIIMath\nphi_n(kappa) = 1/(4pi^2 kappa^2)\n int_0^oo (sin(kappa R))/(kappa R)\n del/(del R)\n[R^2 (del D_n (R))/(del R)] del R\n```\n\n[AsciiMath Documentation](http://asciimath.org/)\n\n## Subscript: H~2~O\n\nYou can also use inline math: `$H_2O$`\n\n\n## Superscript: 29^th^\n\nYou can also use inline math: `$29^{th}$`\n\n\n## Emoji: :panda_face: :sparkles: :camel: :boom: :pig:\n\n[Emoji Cheat Sheet](http://www.emoji-cheat-sheet.com/)\n\n## Fontawesome: :fa-car: :fa-flag: :fa-bicycle: :fa-leaf: :fa-heart:\n\n[All the Font Awesome icons](http://fontawesome.io/icons/)\n\n## Echarts\n\n[Documentation for Echarts](http://echarts.baidu.com)\n\nThe width and height is the size for chart container.\n\n```echarts\n{\n  \"width\": 500,\n  \"height\": 400,\n  \"series\": [\n    {\n      \"name\": \"访问来源\",\n      \"type\": \"pie\",\n      \"radius\": \"55%\",\n      \"data\": [\n        {\n          \"value\": 235,\n          \"name\": \"视频广告\"\n        },\n        {\n          \"value\": 274,\n          \"name\": \"联盟广告\"\n        },\n        {\n          \"value\": 310,\n          \"name\": \"邮件营销\"\n        },\n        {\n          \"value\": 335,\n          \"name\": \"直接访问\"\n        },\n        {\n          \"value\": 400,\n          \"name\": \"搜索引擎\"\n        }\n      ]\n    }\n  ]\n}\n```\n\n## code\n\n### c\n```c\n#include <stdio.h>\nint main(int argc char* argv[]) {\n  printf(\"Hello, World!\");\n  return 0;\n}\n```\n\n### json\n\n```json\n{\n  \"name\": \"markdown-it-vue\"\n}\n```\n\n### javascript\n```json\nimport MarkdownItVue from 'markdown-it-vue'\nexport default {\n  components: {\n    MarkdownItVue\n  }\n}\n```\n\n### bash\n```bash\nnpm install markdown-it-vue\n```\n\n## table\n\n| First Header  | Second Header |\n| ------------- | ------------- |\n| Content Cell  | Content Cell  |\n| Content Cell  | Content Cell  |\n\n## flowchart.js\n\n```flowchart.js\nst=>start: Start|past:>http://www.google.com[blank]\ne=>end: End:>http://www.google.com\nop1=>operation: My Operation|past\nop2=>operation: Stuff|current\nsub1=>subroutine: My Subroutine|invalid\ncond=>condition: Yes\nor No?|approved:>http://www.google.com\nc2=>condition: Good idea|rejected\nio=>inputoutput: catch something...|request\npara=>parallel: parallel tasks\n\nst->op1(right)->cond\ncond(yes, right)->c2\ncond(no)->para\nc2(true)->io->e\nc2(false)->e\n\npara(path1, bottom)->sub1(left)->op1\npara(path2, right)->op2->e\n\nst@>op1({\"stroke\":\"Red\"})@>cond({\"stroke\":\"Red\",\"stroke-width\":6,\"arrow-end\":\"classic-wide-long\"})@>c2({\"stroke\":\"Red\"})@>op2({\"stroke\":\"Red\"})@>e({\"stroke\":\"Red\"})\n```\n\n"
    }
  ]
}